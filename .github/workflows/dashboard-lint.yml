name: Lint Grafana Dashboards

on:
  pull_request:
    paths:
      - '**/*.json'  # Only run when JSON files are modified
    branches:
      - master
  push:
    paths:
      - '**/*.json'  # Only run when JSON files are modified
    branches:
      - master

jobs:
  lint-dashboards:
    name: Lint Grafana Dashboards
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'  # Using a recent stable version of Go
          check-latest: true

      - name: Install Grafana Dashboard Linter
        run: |
          go install github.com/grafana/dashboard-linter@latest
          dashboard-linter --version

      - name: Lint Kestrel Dashboard
        id: lint-kestrel
        run: |
          OUTPUT=$(dashboard-linter lint kestrel/kestrel-connections-dashboard.json 2>&1) || true
          echo "result<<EOF" >> $GITHUB_ENV
          echo "$OUTPUT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Lint Runtime Dashboard
        id: lint-runtime
        run: |
          OUTPUT=$(dashboard-linter lint runtime/dotnet-runtime-dashboard.json 2>&1) || true
          echo "result<<EOF" >> $GITHUB_ENV
          echo "$OUTPUT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Add Lint Results Comment
        if: github.event_name == 'pull_request'  # Only comment on PRs
        uses: actions/github-script@v7
        with:
          script: |
            const kestrelResult = process.env.KESTREL_RESULT || 'No issues found'
            const runtimeResult = process.env.RUNTIME_RESULT || 'No issues found'
            
            let comment = '## Grafana Dashboard Lint Results 📊\n\n'
            comment += '### Kestrel Dashboard\n'
            comment += '```\n' + kestrelResult + '\n```\n\n'
            comment += '### Runtime Dashboard\n'
            comment += '```\n' + runtimeResult + '\n```\n\n'
            comment += '_Note: This is a new linting process and we are currently gathering feedback on the rules. Results are informational only at this time._\n\n'
            comment += '\nLinting powered by [grafana/dashboard-linter](https://github.com/grafana/dashboard-linter) 🔍'
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            })

      - name: Create Issue on Lint Failure
        if: github.event_name == 'push' && failure()  # Only create issues on push events that fail
        uses: actions/github-script@v7
        with:
          script: |
            const kestrelResult = process.env.KESTREL_RESULT || 'No issues found'
            const runtimeResult = process.env.RUNTIME_RESULT || 'No issues found'
            
            const title = '🚨 Grafana Dashboard Linting Issues Detected'
            const body = `## Grafana Dashboard Lint Results 📊

            ### Kestrel Dashboard
            \`\`\`
            ${kestrelResult}
            \`\`\`

            ### Runtime Dashboard
            \`\`\`
            ${runtimeResult}
            \`\`\`

            This issue was automatically created because linting issues were detected after changes were merged to master.

            Please review and fix these issues to maintain dashboard quality standards.

            Linting powered by [grafana/dashboard-linter](https://github.com/grafana/dashboard-linter) 🔍`

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['dashboard', 'linting']
            }) 